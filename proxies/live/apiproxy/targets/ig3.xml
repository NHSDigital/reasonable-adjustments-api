<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TargetEndpoint name="ig3">
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>FlowCallout.UserRoleService</Name>
            </Step>
            <Step>
                <Name>OAuthV2.VerifyAccessToken</Name>
            </Step>
            <Step>
                <Name>Quota</Name>
            </Step>
            <Step>
                <Name>SpikeArrest</Name>
            </Step>
            <Step>
              <Name>VerifyAPIKey.CustomAttributes</Name>
            </Step>
            <Step>
                <Name>JavaScript.EndpointValidation</Name>
            </Step>
            <Step>
                <Name>JavaScript.SetPathVariable</Name>
                <Condition>(proxy.pathsuffix MatchesPath "/_poll/*")</Condition>
            </Step>
            <Step>
                <Name>AssignMessage.SetPathVariable</Name>
            </Step>
            <Step>
                <Name>RaiseFault.InvalidRequest</Name>
                <Condition>isError = true</Condition>
            </Step>
            <Step>
              <Name>JavaScript.CreateClaimVars</Name>
            </Step>
             <Step>
              <Name>AssignMessage.Copy.RequestHeaders</Name>
            </Step>
            <Step>
              <Name>AssignMessage.AddHeaders</Name>
            </Step>
            <Step>
              <Name>AssignMessage.RemoveHeaders</Name>
            </Step>
            <Step>
              <Name>AssignMessage.JWT</Name>
            </Step>
        </Request>
        <Response>
            <Step>
                <Name>AssignMessage.AddCors</Name>
            </Step>
        </Response>
    </PreFlow>
    <PostFlow>
        <Response>
            <Step>
                <Name>AssignMessage.Mirror.CorrelationID</Name>
                <Condition>(original-request-details.header.X-Correlation-ID ~~ ".+")</Condition>
            </Step>
            <Step>
                <Name>AssignMessage.Mirror.RequestID</Name>
                <Condition>(original-request-details.header.X-Request-ID ~~ ".+")</Condition>
            </Step>
            <Step>
                <Name>ExtractVariable.GetContentLocation</Name>
            </Step>
            <Step>
                <Name>AssignMessage.SetContentLocation</Name>
                <Condition>request.verb != "GET"</Condition>
            </Step>
        </Response>
    </PostFlow>
    <HTTPTargetConnection>
      <Properties>
        <!-- Whitelist the 'expected' error code responses so the responses pass unhindered to caller
             Anything unexpected will be sanitsed by the DefaultFaultRule -
             https://docs.apigee.com/api-platform/fundamentals/fault-handling#customhandlingofhttperrorcodesfromthetargetserver -->
        <Property name="success.codes">1xx,2xx,3xx,4xx</Property>
      </Properties>
      <SSLInfo>
        <Enabled>true</Enabled>
      </SSLInfo>
      <LoadBalancer>
        <Server name="ig3"/>
      </LoadBalancer>
      <Path>{myPath}</Path>
    </HTTPTargetConnection>
    <FaultRules>
        <FaultRule name="InvalidAccessToken">
            <Condition>oauthV2.OAuthV2.VerifyAccessToken.failed</Condition>
            <Step>
                <Name>ExtractVariables.InvalidAccessToken</Name>
            </Step>
            <Step>
                <Name>AssignMessage.InvalidAccessToken</Name>
            </Step>
        </FaultRule>
        <FaultRule name="JWTGenerationError">
            <Condition>JWT.failed = true</Condition>
            <Step>
                <Name>AssignMessage.JWTGenerationError</Name>
            </Step>
        </FaultRule>
        <FaultRule name="UserRoleSharedFlowError">
            <!--<Condition>isSharedFlowError = true</Condition>-->
            <Condition>sharedFlow.userRoleError = true</Condition>
            <Step>
                <Name>AssignMessage.SharedFlowError</Name>
            </Step>
            <Step>
                <Name>AssignMessage.Errors.CatchAllMessage</Name>
            </Step>
        </FaultRule>
    </FaultRules>
    <DefaultFaultRule name="UnkownError">
        <Step>
            <Name>AssignMessage.Errors.CatchAllMessage</Name>
        </Step>
    </DefaultFaultRule>
    
</TargetEndpoint>
